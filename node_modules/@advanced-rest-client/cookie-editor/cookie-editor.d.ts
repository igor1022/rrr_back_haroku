/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   cookie-editor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, css, LitElement} from 'lit-element';

import {ArcResizableMixin} from '@advanced-rest-client/arc-resizable-mixin/arc-resizable-mixin.js';

declare namespace UiElements {

  /**
   * `<cookie-editor>` An element to edit cookie details
   *
   * ### Example
   *
   * ```html
   * <cookie-editor></cookie-editor>
   * ```
   *
   * ### Styling
   *
   * `<cookie-editor>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--arc-font-body1-font-size` | Theme property, body font size | ``
   * `--arc-font-body1-font-weight` | Theme property, body from weight | ``
   * `--arc-font-body1-line-height` | Theme property, body line height | ``
   * `--arc-font-headline-font-size` | Theme property, headline font size | ``
   * `--arc-font-headline-font-weight` | Theme property, headline from weight | ``
   * `--arc-font-headline-line-height` | Theme property, headline line height | ``
   * `--arc-font-headline-letter-spacing` | Theme property, headline letter spacing | ``
   * `--primary-color` | Theme property, button color or action button background color | ``
   * `--primary-action-color` | Theme property, action button color | `#fff`
   */
  class CookieEditor {
    readonly form: any;

    /**
     * Currently existing cookie.
     * Values of this propertue will not going to be changed.
     * All new values are sent only in the `save-cookie` event
     */
    cookie: object|null|undefined;

    /**
     * When set the editor is in read only mode.
     */
    readOnly: boolean|null|undefined;

    /**
     * Enables outlined theme.
     */
    outlined: boolean|null|undefined;

    /**
     * Enables compatibility with Anypoint components.
     */
    compatibility: boolean|null|undefined;
    _cname: string|null|undefined;
    _cvalue: string|null|undefined;
    _cdomain: string|null|undefined;
    _cpath: string|null|undefined;
    _cexpires: string|null|undefined;
    _chostOnly: boolean|null|undefined;
    _chttpOnly: boolean|null|undefined;
    _csecure: boolean|null|undefined;
    _csession: boolean|null|undefined;
    render(): any;
    connectedCallback(): void;

    /**
     * Updates state of the UI constrols depending on existing cookie value
     *
     * @param value Cookie to render
     */
    _cookieChanged(value: object|null): void;

    /**
     * Sends the `cancel-cookie-edit` custom event to cancel the edit.
     */
    _cancel(): void;

    /**
     * Sets `override` to `false` and sends the form.
     */
    _save(): void;

    /**
     * Sends the `save-request` custom event with computed detail object.
     */
    _formSubmit(e: CustomEvent|null): void;

    /**
     * Converts the timestamp to a formatted date string accepted by the input
     * field.
     *
     * @param time Timestamp.
     * @returns Formatted date or undefined if `time` is not set or
     * invalid.
     */
    _convertTime(time: Number|null): String|null;
    _valueHandler(e: any): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "cookie-editor": UiElements.CookieEditor;
  }
}
